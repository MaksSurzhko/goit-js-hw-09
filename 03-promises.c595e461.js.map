{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAUN,IARA,IAAMC,EAAaN,EAAKO,SAASf,MAC3BgB,EAAYR,EAAKO,SAASE,KAC1BC,EAAcV,EAAKO,SAASI,OAE5BC,EAAQC,SAASP,EAAWQ,OAC5BL,EAAOI,SAASL,EAAUM,OAC1BH,EAASE,SAASH,EAAYI,OAE3BC,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BzB,EAAcyB,EAAI,EAAGH,EAAQG,EAAIN,GAC9BO,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,QAAQC,IAAI,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE3D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,QAAQC,IAAI,sBAAqCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  \n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n  \n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n  \n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","delayInput","elements","stepInput","step","amountInput","amount","delay1","parseInt","value","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.c595e461.js.map"}